класс ƒирЁлем
{
    типЁлемента
    название
    дата—оздани€
    следЁлем”казатель
    предЁлем”казатель

    получить—одержимое()
    конструктор()
}

класс ѕапка: наследовать ƒирЁлем
{
    внутрЁлем”казатель

    конструктор()
    деструктор()
}

класс ‘айл: наследовать ƒирЁлем
{
    размер‘айла

    конструктор()
}

класс ‘айлова€—истема
{
    начало—писка”казатель
    текущий”казательЌаЁлемент

    создать‘айл(‘айл)
    удалить‘айл(‘айл)
    создатьѕапку(ѕапка)
    удалитьѕапку(ѕапка)

    показать“екущуюƒиректорию()
    изменить“екущуюƒиректорию(папка)

    загрузить‘айловую—истему(им€‘айла)
    выгрузить‘айловую—истему()

    конструктор()
    деструктор()
}

процедура меню()
{
    ‘айлова€—истема √лав‘айл—ис

    вывести("<ѕриветствие и инструкци€>")

    выход := ложь;
    пока (не(выход))
    {
        вывести("“екуща€ директори€:" + <текуща€_директори€>)

        вывести("¬ыберите действие")
        вывести("1. —оздать файл")
        вывести("2. —оздать папку")
        вывести("2. ”далить файл")
        вывести("3. ”далить папку")
        вывести("4. »зменить директорию")
        вывести("5. ¬ывести все элементы текущей папки")
        вывести("6. «агрузить структуру")
        вывести("7. —охранить структуру")
        вывести("8. —оздать структуру")
        вывести("9. ¬ыйти из программы")
    
        выбор := ввести÷елое„исло()
        
        переключатель (выбор) {
        случай 1: // —оздание файла
        {
            ввести(название, размер, дата—оздани€)
            ‘айл.название = название
            ‘айл.дата—оздани€ = дата—оздани€
            ‘айл.размер = размер

            √лав‘айл—ис.создать‘айл(‘айл)
        }
        случай 2: // —оздание папки
        {
            ввести(название, дата—оздани€)
            ѕапка.название = название
            ѕапка.дата—оздани€ = дата—оздани€

            √лав‘айл—ис.создатьѕапку(ѕапка)
        }
        случай 3: // ”даление файла
        {
            √лав‘айл—ис.показать“екущуюƒиректорию()
            ввести(название‘айла)

            ‘айл = √лав‘айл—ис.найтиЁлемент(название‘айла, тип = ‘айл)
            если(‘айл != пуста€_ссылка)
            {
                √лав‘айл—ис.удалить‘айл(‘айл)
            }
            иначе
            {
                вывести("¬ текущей директории нет файла с данным названием")
            }
        }
        случай 4: // ”даление папки
        {
            √лав‘айл—ис.показать“екущуюƒиректорию()
            ввести(названиеѕапки)

            ѕапка = √лав‘айл—ис.найтиЁлемент(названиеѕапки, тип = ѕапка)
            если(ѕапка != пуста€_ссылка)
            {
                √лав‘айл—ис.удалитьѕапку(ѕапка)
            }
            иначе
            {
                вывести("¬ текущей директории нет папки с данным названием")
            }
        }
        случай 5: // »зменение директории
        {
            √лав‘айл—ис.показать“екущуюƒиректорию()
            ввести(названиеѕапки)
            √лав‘айл—ис.изменить“екущуюƒиректорию(названиеѕапки)
        }
        случай 6: // ¬ывод элементов текущей директории
        {
            √лав‘айл—ис.показать“екущуюƒиректорию()
        }
        случай 7: // «агрузка структуры
        {
            вывести("<ѕредуреждение о перезаписи старой структуры>")
            ввести(продолжить)

            если(продолжить)
            {
                √лав‘айл—ис.деструктор()
                название_файла = найти‘айл()
                √лав‘айл—ис.загрузить‘айловую—истему(название_файла)
            }
        }
        случай 8: // —охранение структуры
        {
            если(√лав‘айл—ис.неѕуста())
            {
                ввести(название_файла)
                √лав‘айл—ис.выгрузить‘айловую—истему(название_файла)
            }
        }
        случай 9: // —оздание новой структуры
        {
            ввести(продолжить)
            
            если(продолжить)
            {
                √лав‘айл—ис.деструктор()
                √лав‘айл—ис.конструктор()
            }
        } 
        по умолчанию:
            пропустить
        }
    }
}

процедура создать‘айл(новый‘айл)
{
    создатьЁлем(новый‘айл)
}

процедура создатьѕапку(нова€ѕапка)
{
    создатьЁлем(нова€ѕапка)
}

процедура создатьЁлем(новыйЁлем)
{
    если(<сменена текуща€ директори€>)
    {
        временный = текущий”казательЌаЁлемент.внутрЁлем”казатель
        если(временный != пуста€_ссылка)
        {
            пока(<не конец списка>)
                временный = временный.следЁлем”казатель
            текущий”казательЌаЁлемент = временный
        }
    }
    если(<файлова€ система пуста>)
    {
        начало—писка”казатель = новыйЁлем
        текуща€_директори€ = новыйЁлем
        выйти
    }
    если(<выбранна€ папка пуста>)
    {
        текущий”казательЌаЁлемент.внутрЁлем”казатель = новыйЁлем
        новыйЁлем.предЁлем”казатель = текущий”казательЌаЁлемент

        текущий”казательЌаЁлемент = новыйЁлем
        выйти
    }
    иначе
    {
        текущий”казательЌаЁлемент.следЁлем”казатель = новыйЁлем
        новыйЁлем.предЁлем”казатель = текущий”казательЌаЁлемент
        текущий”казательЌаЁлемент = новыйЁлем
        
        выйти
    }
}

процедура удалить‘айл(бывший‘айл)
{
    удалитьЁлем(бывший‘айл)
}

процедура удалитьѕапку(бывша€ѕапка)
{
    удалитьЁлем(бывша€ѕапка)
}

процедура удалитьЁлем(бывшийЁлем)
{
    если(<файл €вл€етс€ единственным>)
    {
        начало—писка”казатель = пуста€_ссылка
        удалить бывшийЁлем

        выйти
    }
    если(<файл €вл€етс€ началом списка>)
    {
        начало—писка”казатель = бывшийЁлем.следЁлем”казатель
        бывшийЁлем.следЁлем”казатель.предЁлем”казатель = пуста€_ссылка
        удалить бывшийЁлем

        выйти
    }
    если(<файл €вл€етс€ концом списка>)
    {
        бывшийЁлем.предЁлем”казатель.следЁлем”казатель = пуста€_ссылка
        текущий”казательЌаЁлемент = бывшийЁлем.предЁлем”казатель

        удалить бывшийЁлем
        выйти
    }
    иначе
    {
        бывшийЁлем.предЁлем”казатель.следЁлем”казатель = бывшийЁлем.следЁлем”казатель
        бывшийЁлем.следЁлем”казатель.предЁлем”казатель = бывшийЁлем.предЁлем”казатель
        удалить бывшийЁлем
    }
}

